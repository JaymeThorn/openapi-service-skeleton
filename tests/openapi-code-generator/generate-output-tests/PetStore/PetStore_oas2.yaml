swagger: '2.0'
info:
  title: Swagger Petstore
  description: >-
    This is a sample server Petstore server v.2.0. You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.

    This is Markdown, so you can do **bold** and *italic* and ***bold italic*** and
    
     * use
     * lists

    and tables too!

     | Header 1     | Header 2      |
     |:-------------|--------------:|
     | Left-aligned | Right-aligned |
     | 1            | 3 4           |
     | **bold**     | `woohoo!`     |
    
    And code snippets:
    
        echo "foobar"

  version: '2.0'
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
    name: Swagger Team
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
# host: petstore.swagger.io
# basePath: /v2

tags:
  - name: pet
    description: Everything about your Pets
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: store
    description: Access to Petstore orders
  - name: user
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: 'http://swagger.io'
# schemes:
#   - http

paths:
  /pet:
    x-swagger-router-controller: Pet
    post:
      tags:
        - pet
      summary: Add a new pet to the store
      description: ''
      operationId: addPet
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Pet object that needs to be added to the store
          required: true
          schema:
            $ref: '#/definitions/Pet'
      responses:
        '200':
          description: Successful operation
          x-gulp-openapi-code-generator-outcome: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Pet'
        '405':
          description: Invalid input
          x-gulp-openapi-code-generator-outcome: badInputError
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
    put:
      tags:
        - pet
      summary: Update an existing pet
      description: ''
      operationId: updatePet
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Pet object that needs to be added to the store
          required: true
          schema:
            $ref: '#/definitions/Pet'
      responses:
        '200':
          description: Successful operation
          x-gulp-openapi-code-generator-outcome: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Pet'
        '400':
          description: Invalid ID supplied
          x-gulp-openapi-code-generator-outcome: badRequestError
        '404':
          description: Pet not found
          x-gulp-openapi-code-generator-outcome: notFoundError
        '405':
          description: Validation exception
          x-gulp-openapi-code-generator-outcome: badInputError
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
  /pet/findByStatus:
    x-swagger-router-controller: Pet
    get:
      tags:
        - pet
      summary: Finds Pets by status
      description: Multiple status values can be provided with comma separated strings
      operationId: findPetsByStatus
      produces:
        - application/xml
        - application/json
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: true
          type: array
          items:
            type: string
            enum:
              - available
              - pending
              - sold
            default: available
          collectionFormat: multi
      responses:
        '200':
          description: successful operation
          x-gulp-openapi-code-generator-outcome: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Pet'
        '400':
          description: Invalid status value
          x-gulp-openapi-code-generator-outcome: badRequestError
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
  /pet/findByTags:
    x-swagger-router-controller: Pet
    get:
      tags:
        - pet
      summary: Finds Pets by tags
      description: 'Muliple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.'
      operationId: findPetsByTags
      produces:
        - application/xml
        - application/json
      parameters:
        - name: tags
          in: query
          description: Tags to filter by
          required: true
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: successful operation
          x-gulp-openapi-code-generator-outcome: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Pet'
        '400':
          description: Invalid tag value
          x-gulp-openapi-code-generator-outcome: badRequestError
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
      deprecated: true
  '/pet/{petId}':
    x-swagger-router-controller: Pet
    get:
      tags:
        - pet
      summary: Find pet by ID
      description: Returns a single pet
      operationId: getPetById
      produces:
        - application/xml
        - application/json
      parameters:
        - name: petId
          in: path
          description: ID of pet to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          x-gulp-openapi-code-generator-outcome: success
          schema:
            $ref: '#/definitions/Pet'
        '400':
          description: Invalid ID supplied
          x-gulp-openapi-code-generator-outcome: badRequestError
        '404':
          description: Pet not found
          x-gulp-openapi-code-generator-outcome: notFoundError
      security:
        - api_key: []
    post:
      tags:
        - pet
      summary: Updates a pet in the store with form data
      description: ''
      operationId: updatePetWithForm
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/xml
        - application/json
      parameters:
        - name: petId
          in: path
          description: ID of pet that needs to be updated
          required: true
          type: integer
          format: int64
        - name: name
          in: formData
          description: Updated name of the pet
          required: false
          type: string
        - name: status
          in: formData
          description: Updated status of the pet
          required: false
          type: string
      responses:
        '405':
          description: Invalid input
          x-gulp-openapi-code-generator-outcome: badInputError
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
    delete:
      tags:
        - pet
      summary: Deletes a pet
      description: ''
      operationId: deletePet
      produces:
        - application/xml
        - application/json
      parameters:
        - name: api_key
          in: header
          required: false
          type: string
        - name: petId
          in: path
          description: Pet id to delete
          required: true
          type: integer
          format: int64
      responses:
        '400':
          description: Invalid ID supplied
          x-gulp-openapi-code-generator-outcome: badRequestError
        '404':
          description: Pet not found
          x-gulp-openapi-code-generator-outcome: notFoundError
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
  '/pet/{petId}/uploadImage':
    x-swagger-router-controller: Pet
    post:
      tags:
        - pet
      summary: uploads an image
      description: ''
      operationId: uploadFile
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: petId
          in: path
          description: ID of pet to update
          required: true
          type: integer
          format: int64
        - name: additionalMetadata
          in: formData
          description: Additional data to pass to server
          required: false
          type: string
        - name: file
          in: formData
          description: file to upload
          required: false
          type: file
      responses:
        '200':
          description: successful operation
          x-gulp-openapi-code-generator-outcome: success
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
  /store/inventory:
    x-swagger-router-controller: Store
    get:
      tags:
        - store
      summary: Returns pet inventories by status
      description: Returns a map of status codes to quantities
      operationId: getInventory
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: successful operation
          x-gulp-openapi-code-generator-outcome: success
          schema:
            type: object
            additionalProperties:
              type: integer
              format: int32
      security:
        - api_key: []
  /store/order:
    x-swagger-router-controller: Store
    post:
      tags:
        - store
      summary: Place an order for a pet
      description: ''
      operationId: placeOrder
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: order placed for purchasing the pet
          required: true
          schema:
            #$ref: '#/definitions/Order'
            $ref: 'https://api.swaggerhub.com/domains/helens/petstore-commons/1.0#/definitions/Order'
      responses:
        '200':
          description: successful operation
          x-gulp-openapi-code-generator-outcome: success
          schema:
            #$ref: '#/definitions/Order'
            $ref: 'https://api.swaggerhub.com/domains/helens/petstore-commons/1.0#/definitions/Order'
        '400':
          description: Invalid Order
          x-gulp-openapi-code-generator-outcome: badRequestError
        '405':
          description: Invalid input
          x-gulp-openapi-code-generator-outcome: badInputError
  '/store/order/{orderId}':
    x-swagger-router-controller: Store
    get:
      tags:
        - store
      summary: Find purchase order by ID
      description: 'For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions'
      operationId: getOrderById
      produces:
        - application/xml
        - application/json
      parameters:
        - name: orderId
          in: path
          description: ID of pet that needs to be fetched
          required: true
          type: integer
          maximum: 10
          minimum: 1
          format: int64
      responses:
        '200':
          description: successful operation
          x-gulp-openapi-code-generator-outcome: success
          schema:
            $ref: '#/definitions/Order'
        '400':
          description: Invalid ID supplied
          x-gulp-openapi-code-generator-outcome: badRequestError
        '404':
          description: Order not found
          x-gulp-openapi-code-generator-outcome: notFoundError
    delete:
      tags:
        - store
      summary: Delete purchase order by ID
      description: For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors
      operationId: deleteOrder
      produces:
        - application/xml
        - application/json
      parameters:
        - name: orderId
          in: path
          description: ID of the order that needs to be deleted
          required: true
          type: integer
          minimum: 1
          format: int64
      responses:
        '400':
          description: Invalid ID supplied
          x-gulp-openapi-code-generator-outcome: badRequestError
        '404':
          description: Order not found
          x-gulp-openapi-code-generator-outcome: notFoundError
  /user:
    x-swagger-router-controller: User
    post:
      tags:
        - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Created user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        default:
          description: successful operation
          x-gulp-openapi-code-generator-outcome: success
  /user/createWithArray:
    x-swagger-router-controller: User
    post:
      tags:
        - user
      summary: Creates list of users with given input array
      description: ''
      operationId: createUsersWithArrayInput
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: List of user object
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
      responses:
        default:
          description: successful operation
          x-gulp-openapi-code-generator-outcome: success
  /user/createWithList:
    x-swagger-router-controller: User
    post:
      tags:
        - user
      summary: Creates list of users with given input array
      description: ''
      operationId: createUsersWithListInput
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: List of user object
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
      responses:
        default:
          description: successful operation
          x-gulp-openapi-code-generator-outcome: success
  /user/login:
    x-swagger-router-controller: User
    get:
      tags:
        - user
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      produces:
        - application/xml
        - application/json
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          x-gulp-openapi-code-generator-outcome: success
          schema:
            type: string
          headers:
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when token expires
        '400':
          description: Invalid username/password supplied
          x-gulp-openapi-code-generator-outcome: badRequestError
  /user/logout:
    x-swagger-router-controller: User
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      produces:
        - application/xml
        - application/json
      parameters: []
      responses:
        default:
          description: successful operation
          x-gulp-openapi-code-generator-outcome: success
  '/user/{username}':
    x-swagger-router-controller: User
    get:
      tags:
        - user
      summary: Get user by user name
      description: ''
      operationId: getUserByName
      produces:
        - application/xml
        - application/json
      parameters:
        - name: username
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          x-gulp-openapi-code-generator-outcome: success
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid username supplied
          x-gulp-openapi-code-generator-outcome: badRequestError
        '404':
          description: User not found
          x-gulp-openapi-code-generator-outcome: notFoundError
    put:
      tags:
        - user
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      produces:
        - application/xml
        - application/json
      parameters:
        - name: username
          in: path
          description: name that need to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '400':
          description: Invalid user supplied
          x-gulp-openapi-code-generator-outcome: badRequestError
        '404':
          description: User not found
          x-gulp-openapi-code-generator-outcome: notFoundError
    delete:
      tags:
        - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      produces:
        - application/xml
        - application/json
      parameters:
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          type: string
      responses:
        '400':
          description: Invalid username supplied
          x-gulp-openapi-code-generator-outcome: badRequestError
        '404':
          description: User not found
          x-gulp-openapi-code-generator-outcome: notFoundError

securityDefinitions:
  petstore_auth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
    flow: implicit
    scopes:
      'write:pets': modify pets in your account
      'read:pets': read your pets
  api_key:
    type: apiKey
    name: api_key
    in: header

definitions:
  Order:
    type: object
    properties:
      id:
        type: integer
        format: int64
      petId:
        type: integer
        format: int64
      quantity:
        type: integer
        format: int32
      shipDate:
        type: string
        format: date-time
      status:
        type: string
        description: Order Status
        enum:
          - placed
          - approved
          - delivered
      complete:
        type: boolean
        default: false
    xml:
      name: Order
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
      phone:
        type: string
      userStatus:
        type: integer
        format: int32
        description: User Status
    xml:
      name: User
  Category:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    xml:
      name: Category
  Tag:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    xml:
      name: Tag
  Pet:
    type: object
    required:
      - name
      - photoUrls
    properties:
      id:
        type: integer
        format: int64
      category:
        $ref: '#/definitions/Category'
      name:
        type: string
        example: doggie
      photoUrls:
        type: array
        xml:
          name: photoUrl
          wrapped: true
        items:
          type: string
      tags:
        type: array
        xml:
          name: tag
          wrapped: true
        items:
          $ref: '#/definitions/Tag'
      status:
        type: string
        description: pet status in the store
        enum:
          - available
          - pending
          - sold
    xml:
      name: Pet
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /helen/petstore/2.0
schemes:
 - https
 - http